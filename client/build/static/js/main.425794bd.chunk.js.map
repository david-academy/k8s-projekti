{"version":3,"sources":["services/login.js","services/blogs.js","components/Blog.js","hooks/index.js","components/NewBlogForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","console","log","login","credentials","a","axios","post","response","data","token","getAll","get","then","create","newObject","config","headers","Authorization","setToken","newToken","update","id","put","remove","delete","Blog","blog","likeButtonHandler","removeButtonHandler","currentUser","useState","visible","setVisible","showWhenVisible","display","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","onClick","user","name","title","author","url","likes","username","useField","type","value","setValue","onChange","event","target","reset","BlogForm","blogs","setBlogs","notify","blogURL","handleNewBlogSubmit","preventDefault","blogObject","blogService","addedBlog","concat","onSubmit","Notification","notification","message","color","background","fontSize","borderStyle","borderRadius","padding","App","password","setUser","notificationMessage","setNotificationMessage","postVisible","setPostVisible","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","setTimeout","handleLikeButton","blogId","likedBlog","find","map","handleRemoveButton","removeBlog","confirm","newBlogs","filter","handleLogin","loginService","setItem","stringify","hideWhenVisible","blogList","sort","b","removeItem","NewBlogForm","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.425794bd.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/login'\nconsole.log(baseUrl)\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\nexport default { getAll, create, setToken, update, remove }\n\n","import React, { useState } from 'react'\nimport propTypes from 'prop-types'\n\nconst Blog = ({ blog, likeButtonHandler, removeButtonHandler, currentUser }) => {\n  const [visible, setVisible]= useState(false)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const showWhenVisible = { display: visible ? '': 'none' }\n  const toggleVisibility =() => {\n    setVisible(!visible)\n    console.log(blog.user.name)\n  }\n  const removeButton = () => {\n    return currentUser === blog.user.username\n      ? (<button onClick={removeButtonHandler}>Remove</button>)\n      : (<></>)\n  }\n\n  return(\n    <div style={blogStyle} className='blog' >\n      <div className='title' onClick={() => toggleVisibility()}>\n        {blog.title} {blog.author}\n      </div>\n      <div className='moreInfo' style={showWhenVisible}>\n        <p>{blog.url}</p>\n        <p>{blog.likes} likes <button onClick={likeButtonHandler}>Like</button></p>\n\n        <p>added by {blog.user.name}</p>\n        {removeButton()}\n      </div>\n    </div>\n\n\n  )\n}\nBlog.propTypes={\n  blog: propTypes.object.isRequired,\n  likeButtonHandler: propTypes.func.isRequired,\n  removeButtonHandler: propTypes.func.isRequired,\n  currentUser: propTypes.string.isRequired\n}\nexport default Blog","import { useState } from 'react'\n\nexport const useField = ({ type, name }) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    name,\n    onChange,\n    reset\n  }\n}\n","/* eslint-disable no-mixed-spaces-and-tabs */\nimport React from 'react'\nimport blogService from '../services/blogs'\nimport { useField } from '../hooks/index'\n\n\nconst BlogForm = ({ blogs, setBlogs, notify }) => {\n  const title = useField('text')\n  const author = useField('text')\n  const blogURL = useField('text')\n\n  const handleNewBlogSubmit = async (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title.value,\n      author: author.value,\n      url: blogURL.value,\n    }\n\n    const addedBlog = await blogService.create(blogObject)\n    setBlogs(blogs.concat(addedBlog))\n    title.reset()\n    author.reset()\n    blogURL.reset()\n    notify(`a new blog ${addedBlog.title} by ${addedBlog.author} added `)\n  }\n\n  return (\n\t<>\n\t<h2>create new</h2>\n\t<form onSubmit={handleNewBlogSubmit}>\n\t\tTitle\n\t  <input {...title} reset={null}/><br />\n\t\tAuthor\n\t  <input {...author} reset={null}/><br />\n\t\tURL\n\t  <input {...blogURL}reset={null}/><br />\n\t  <input type=\"submit\" value=\"create\"/>\n\t</form>\n \t</>\n  )\n}\n\nexport default BlogForm","import React from 'react'\n\nconst Notification = ({ notification }) => {\n    if (notification.message === null) {\n      return null\n    }\n    const style = {\n        color: notification.type === 'error'? 'red': 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n      }\n  \n    return (\n      <div style={style}>\n        {notification.message}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\nimport Blog from './components/Blog'\nimport NewBlogForm from './components/NewBlogForm'\nimport Notification from './components/Notification'\nimport { useField } from './hooks/index'\n\nconst App= () => {\n  const [blogs, setBlogs] = useState([])\n  const username = useField({ type: 'text', name: 'username' })\n  const password = useField({ type: 'password', name: 'password' })\n  const [user, setUser] = useState(null)\n  const [notificationMessage, setNotificationMessage] = useState( { message:null })\n  const [postVisible, setPostVisible] = useState(false)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const notify = (message, type='success') => {\n    setNotificationMessage({ message,type })\n    setTimeout(() => setNotificationMessage({ message: null }), 5000)\n  }\n  const handleLikeButton = async (blogId) => {\n    const likedBlog = blogs.find(blog => blog.id === blogId)\n    likedBlog.likes++\n\n    try {\n      await blogService.update(likedBlog.id, likedBlog)\n      notify(`You liked the blog: ${likedBlog.title} by ${likedBlog.author}`)\n\n      blogs.map(blog => {\n        if (blog.id === likedBlog.id) {\n          blog.likes = likedBlog.likes\n        }\n        return blog\n      })\n    } catch (exception) {\n      notify('your like did not register', 'error')\n    }\n  }\n  const handleRemoveButton = async (blogId) => {\n    const removeBlog = blogs.find(blog => blog.id=== blogId)\n\n    window.confirm(`remove blog ${removeBlog.title} by ${removeBlog.author}`)\n    try{\n      await blogService.remove(removeBlog.id)\n      notify(`Removed blog: ${removeBlog.title}`)\n      const newBlogs = blogs.filter(blog => blog.id !==removeBlog.id)\n      setBlogs(newBlogs)\n    } catch (exception){\n      console.log('this did not work', exception)\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: username.value,\n        password: password.value,\n      })\n\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      setUser(user)\n      username.reset()\n      password.reset()\n    } catch (exception) {\n      notify('wrong username or password', 'error')\n      password.reset()\n    }\n  }\n\n  //clickable headers - reveals more info\n  const hideWhenVisible = { display: postVisible ? 'none': '' }\n  const showWhenVisible = { display: postVisible ? '': 'none' }\n\n  //sorting blogs according to most likes\n  const blogList= blogs\n    .sort((a,b) => b.likes - a.likes)\n\n  if(user===null){\n    return(\n      <div>\n        <Notification notification={notificationMessage} />\n        <h2>This crap should be running on AKS</h2>\n\n        <h2>Sign in</h2>\n        <form onSubmit={handleLogin}>\n            username\n          <input {...username} reset={null} />\n            password\n          <input {...password} reset={null} />\n          <button type=\"submit\">login</button>\n        </form>\n      </div>\n    )\n  }\n  return(\n    <div>\n      <h2>blogs</h2>\n      <Notification notification={notificationMessage} />\n      <p>\n        {user.name} logged in\n        <button onClick={handleLogout}type=\"logout\">logout</button>\n      </p>\n\n      <div style={hideWhenVisible}>\n        <button onClick={() => setPostVisible(true)}>new blog</button>\n      </div>\n      <div style={showWhenVisible}>\n        <NewBlogForm\n          blogs={blogs}\n          setBlogs={setBlogs}\n          notify={notify}/>\n        <button onClick={() => setPostVisible(false)}>cancel</button>\n      </div>\n      {blogList.map(blog =>\n        <Blog\n          key={blog.id}\n          blog={blog}\n          likeButtonHandler={() => handleLikeButton(blog.id)}\n          removeButtonHandler={() => handleRemoveButton(blog.id)}\n          currentUser={user.username}\n        />\n      )}\n    </div>\n\n  )\n}\n\nexport default App\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}